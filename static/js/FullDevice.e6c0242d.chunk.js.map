{"version":3,"file":"static/js/FullDevice.e6c0242d.chunk.js","mappings":"0PAyHA,UAhH6B,WAC3B,MAA4BA,EAAAA,WAA5B,eAAOC,EAAP,KAAeC,EAAf,KAQQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OAEXC,GAAWC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,GAAmBP,GAAM,KACtD,EAAoCH,EAAAA,SAClCQ,EAAWA,EAASG,MAAQ,GAD9B,eAAOC,EAAP,KAAmBC,EAAnB,KAGA,EAAwCb,EAAAA,SAAuB,GAA/D,eAAOc,EAAP,KAAqBC,EAArB,KAEA,EAAoCf,EAAAA,SAAe,GAAnD,eAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAAwCjB,EAAAA,SAAe,GAAvD,eAAOkB,EAAP,KAAqBC,EAArB,KAEAnB,EAAAA,WAAgB,WAAM,wCACpB,+GAE2BoB,IAAAA,IACrB,qDAAuDjB,GAH7D,gBAEYkB,EAFZ,EAEYA,KAGRnB,EAAUmB,GACVF,EAAgBE,EAAKC,OAAO,GAAGC,OANnC,0GADoB,uBAAC,WAAD,wBAWpBC,KACC,CAACrB,IAiBJ,OAAKF,GAKH,gBAAKwB,UAAU,YAAf,UACE,iBAAKA,UAAU,qBAAf,WACE,gBAAKC,IAAKzB,EAAO0B,SAAUC,IAAK3B,EAAO4B,SACvC,iBAAKJ,UAAU,kBAAf,WACE,wBAAKxB,EAAO4B,SACZ,oEAAcX,EAAd,cACA,kJAA2BjB,EAAO6B,OAClC,gBAAKL,UAAU,yBAAf,UACE,wBACGxB,EAAO8B,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAChB,gBAEEC,QAAS,WACPlB,EAAcgB,GACdlB,EAAgBkB,GAChBd,EAAgBlB,EAAOqB,OAAOY,GAAGX,QAEnCE,UAAWT,IAAeiB,EAAO,SAAW,GAP9C,UASGA,EATH,mBACOA,cAcf,gBAAKR,UAAU,kBAAf,UACE,oBACEU,QA/CS,WACjB,GAAIhC,EAAI,CACN,IAAMiC,EAAiB,CACrBjC,GAAG,GAAD,OAAKA,EAAL,YAAWW,GACbe,OAAa,OAAN5B,QAAM,IAANA,OAAA,EAAAA,EAAQ4B,QAAS,GACxBN,MAAOL,EACPS,UAAgB,OAAN1B,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,WAAY,GAC9BM,KAAMnB,EACNH,MAAOC,EAAa,GAEtBP,GAASgC,EAAAA,EAAAA,IAAQD,IACjBvB,EAAcD,EAAa,KAqCrBa,UAAU,qCAFZ,WAIE,gBACEa,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,iBACEC,EAAE,2QACFF,KAAK,aAGT,+EACC7B,EAAa,IAAK,uBAAIA,UAG3B,SAAC,KAAD,CAAMgC,GAAG,IAAT,UACE,mBAAQnB,UAAU,qCAAlB,UACE,uEApDD","sources":["pages/FullDevice.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCartItemById } from \"../redux/cart/selectors\";\nimport { CartItem } from \"../redux/cart/types\";\nimport { addItem } from \"../redux/cart/slice\";\n\nconst FullDevice: React.FC = () => {\n  const [device, setDevice] = React.useState<{\n    imageUrl: string;\n    title: string;\n    oc: string;\n    sizes: number[];\n    prices: { size: number; price: number }[];\n  }>();\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const cartItem = useSelector(selectCartItemById(id || \"\"));\n  const [addedCount, setAddedCount] = React.useState<number>(\n    cartItem ? cartItem.count : 0\n  );\n  const [selectedSize, setSelectedSize] = React.useState<number>(0);\n\n  const [activeSize, setActiveSize] = React.useState(0);\n  const [currentPrice, setCurrentPrice] = React.useState(0);\n\n  React.useEffect(() => {\n    async function fetchDevice() {\n      try {\n        const { data } = await axios.get(\n          \"https://64c696680a25021fde91ce0b.mockapi.io/items/\" + id\n        );\n        setDevice(data);\n        setCurrentPrice(data.prices[0].price);\n      } catch (error) {}\n    }\n\n    fetchDevice();\n  }, [id]);\n\n  const onClickAdd = () => {\n    if (id) {\n      const item: CartItem = {\n        id: `${id}-${selectedSize}`,\n        title: device?.title || \"\",\n        price: currentPrice,\n        imageUrl: device?.imageUrl || \"\",\n        size: selectedSize,\n        count: addedCount + 1,\n      };\n      dispatch(addItem(item));\n      setAddedCount(addedCount + 1);\n    }\n  };\n\n  if (!device) {\n    return <>Загрузка...</>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"container__wrapper\">\n        <img src={device.imageUrl} alt={device.title} />\n        <div className=\"container__flex\">\n          <h2>{device.title}</h2>\n          <h4>Цена: от {currentPrice} ₽</h4>\n          <h4>Операционная система: {device.oc}</h4>\n          <div className=\"device-block__selector\">\n            <ul>\n              {device.sizes.map((size, i) => (\n                <li\n                  key={size}\n                  onClick={() => {\n                    setActiveSize(size);\n                    setSelectedSize(size);\n                    setCurrentPrice(device.prices[i].price);\n                  }}\n                  className={activeSize === size ? \"active\" : \"\"}\n                >\n                  {size} гб.\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"container__flex\">\n          <button\n            onClick={onClickAdd}\n            className=\"button button--outline button--add\"\n          >\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                fill=\"white\"\n              />\n            </svg>\n            <span>Добавить</span>\n            {addedCount > 0 && <i>{addedCount}</i>}\n          </button>\n        </div>\n        <Link to=\"/\">\n          <button className=\"button button--outline button--add\">\n            <span>Назад</span>\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default FullDevice;\n"],"names":["React","device","setDevice","id","useParams","dispatch","useNavigate","useDispatch","cartItem","useSelector","selectCartItemById","count","addedCount","setAddedCount","selectedSize","setSelectedSize","activeSize","setActiveSize","currentPrice","setCurrentPrice","axios","data","prices","price","fetchDevice","className","src","imageUrl","alt","title","oc","sizes","map","size","i","onClick","item","addItem","width","height","viewBox","fill","xmlns","d","to"],"sourceRoot":""}